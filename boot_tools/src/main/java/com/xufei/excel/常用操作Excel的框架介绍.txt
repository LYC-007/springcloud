开发中经常会设计到excel的处理，如导出Excel，导入Excel到数据库中，操作Excel目前有这几个框架:
    1.Apache POI、2.EasyPOI、3.Alibaba Easy Excel、4.Java Excel(Easypoi和 Easyexcel都是基于Apache poi进行二次开发的。)


1).Apache POI 简介是用Java编写的免费开源的跨平台的 Java API，Apache POI提供API给Java程式对Microsoft Office（Excel、WORD、PowerPoint、Visio等）格式档案读和写的功能。
    POI为“Poor Obfuscation Implementation”的首字母缩写，意为“可怜的模糊实现”。
    官方主页： http://poi.apache.org/index.html
    API文档： http://poi.apache.org/apidocs/index.html
2).Java Excel(用的很少)是一开放源码项目，通过它Java开发人员可以读取Excel文件的内容、创建新的Excel文件、更新已经存在的Excel文件。
    jxl 由于其小巧 易用的特点, 逐渐已经取代了 POI-excel的地位, 成为了越来越多的java开发人员生成excel文件的首选。
3).EasyExcel简介:EasyExcel是一个基于Java的简单、省内存的读写Excel的开源项目。在尽可能节约内存的情况下支持读写百M的Excel。是阿里巴巴开源的一款excel 解析工具，底层逻辑也是基于apache poi进行二次开发的。
    不同的是，再读写数据的时候，采用 sax 模式一行一行解析，在并发量很大的情况下，依然能稳定运行！
    github地址: https://github.com/alibaba/easyexcel
    官方文档: https://www.yuque.com/easyexcel/doc/easyexcel
4).easypoi 最大的亮点就是基于注解实体类来导出、导入excel，使用起来非常简单！https://blog.csdn.net/u013044713/article/details/120250508

Easypoi和 Easyexcel不同点在于：
    1)、Easypoi在读写数据的时候，优先是先将数据写入内存，优点是读写性能非常高，但是当数据量很大的时候，会出现oom，当然它也提供了 sax模式的读写方式，需要调用特定的方法实现。
    2)、Easyexcel基于sax模式进行读写数据，不会出现oom情况，程序有过高并发场景的验证，因此程序运行比较稳定，相对于Easypoi来说，读写性能稍慢！
    3).Easypoi 与 Easyexcel 还有一点区别在于，Easypoi对定制化的导出支持非常的丰富，如果当前的项目需求，并发量不大、数据量也不大，但是需要导出excel的文件样式千差万别，推荐easypoi,反之，使用easyexcel！
